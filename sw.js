importScripts("https://cdn.jsdelivr.net/npm/workbox-sw@7.1.0/build/workbox-sw.min.js");workbox.routing.registerRoute(/\.(css|js)$/,new workbox.strategies.StaleWhileRevalidate({cacheName:"css-js-cache",plugins:[new workbox.expiration.ExpirationPlugin({maxAgeSeconds:7*24*60*60})]}));workbox.routing.registerRoute(/(lzc|localhost:4000)\S+(\.(?:png|jpg|jpeg|svg|gif))$/,new workbox.strategies.CacheFirst({cacheName:"local-image-cache"}));workbox.routing.registerRoute(/^((?!lzc|localhost).)*$/,new workbox.strategies.StaleWhileRevalidate({cacheName:"nonlocal-cache"}));workbox.routing.registerRoute(/(lzc|localhost:4000)\S+(\.(?:mp3|mp4|mkv|vtt|ogg|wav|webm))$/,new workbox.strategies.CacheFirst({cacheName:"local-media-cache"}));workbox.routing.registerRoute(/\.(?:woff2|eot|ttf|woff|otf)$/,new workbox.strategies.CacheFirst({cacheName:"font-cache"}));workbox.routing.registerRoute(/\.(?:xml|html|json)/,new workbox.strategies.NetworkFirst({cacheName:"xml-html-cache"}));self.addEventListener("fetch",(e=>{if(e.request.mode==="navigate"){e.respondWith((async()=>{try{const t=await e.preloadResponse;if(t){return t}const o=await fetch(e.request);return o}catch(e){console.error(e);const t=await caches.open(CACHE);const o=await t.match("/offline.html");return o}})())}}));